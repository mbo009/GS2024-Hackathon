from vulnerability_testers.request_sending import (
    create_request_data,
    create_and_send_request,
)


def error_codes(
    server_url, endpoint_data, validation_type, is_endpoint_secured, auth_token
):
    request_data = create_request_data(
        endpoint_data, server_url, is_endpoint_secured, auth_token
    )
    report_output = []
    for expected_code, response_details in endpoint_data["responses"].items():
        response = create_and_send_request(
            request_data["method"],
            request_data["endpoint_path"],
            request_data["query_params"],
            request_data["headers"],
            request_data["payload"],
            request_data["files"],
        )

        if response is not None:
            success = False
            if validation_type == "strict":
                success = response.status_code == int(expected_code)
            else:
                success = str(response.status_code)[0] == expected_code[0]

            report_output.append(
                {
                    "testType": "status_code_analysis",
                    "passed": success,
                    "endpoint": request_data["endpoint_path"],
                    "description": f"Expected status code: {expected_code}, received code: {response.status_code} ",
                }
            )

    if request_data["files"]:
        for file_tuple in request_data["files"].values():
            file_tuple[1].close()
        for temp_file in request_data["temp_files"]:
            temp_file.close()

    return report_output
