from htmlRequests import HtmlRequests
import yaml

class Pentester:
    def __init__(self, config, htmlRequests):
        self.config = config
        self.htmlRequests = htmlRequests
    
    def load_open_api(self, filepath):
        with open(filepath, 'r') as f:
            self.api_spec = yaml.safe_load(f)
    
    def extract_headers(self):
        self.endpoints = []
        paths = self.api_spec.get('paths', {})
        for path, operations in paths.items():
            for method, details in operations.items():
                parameters = details.get('parameters', [])
                self.endpoints.append({
                    'path': path,
                    'method': method.upper(),
                    'parameters': parameters
                })
        

    
    def run(self):
        outputs = []
        for request in self.api_spec:
            outputs.append(self.htmlRequests.run(request))
